#define NUM_EVENTS 5;

var eventPreference[NUM_EVENTS][NUM_EVENTS] = [0, 1, 0, 0, 0,
											   0, 0, 0, 0, 0,
											   1, 1, 0, 0, 0,
											   0, 0, 0, 0, 1,
											   0, 0, 1, 0, 0];

var held[NUM_EVENTS] = [0, 0, 0, 0, 0];

Visit(k) = [] i:{0..NUM_EVENTS-1}@([&& j:{0..NUM_EVENTS-1}@((eventPreference[j][i] == 1 && held[j] == 1)||(eventPreference[j][i]==0)) && (held[i] == 0)] Event.i {
		held[i] = 1;
	}
	-> Visit(k + 1));
	
System() = Visit(0);

#define allHeld (&& j:{0..NUM_EVENTS-1}@(held[j] == 1));
#assert System reaches allHeld;

// Performance can be product exhibition or music events
Performance = getstage -> exhibition -> Performance [] getspeaker -> sayorsing -> Performance;

// Press Conferences for meeting with customers or introduce new product
Conference = gettables -> exhibition -> Conference [] getmic -> sayorsing -> Conference;

// Expo Event
ExpoEvent = getstage -> gettables -> ExpoEvent [] getspeaker -> getmic -> ExpoEvent;

// Exhibition together
expo = ExpoEvent || Conference || Performance;

#assert expo deadlockfree;
